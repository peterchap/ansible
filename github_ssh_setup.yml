---
- name: Set up GitHub SSH access and clone project
  hosts: badslaves
  become: yes
  vars:
    github_celery_url: "git@github.com:peterchap/celery_app.git"  # GitHub SSH repo URL
    github_dnsproject_url: "git@github.com:peterchap/dnsproject.git"
    celery_directory: "/root/celery_app"  # Directory to clone the project into
    dnsproject_directory: "/root/dnsproject"
    ssh_private_key_path: "/root/.ssh/id_rsa"  # Path to store SSH key on the slaves
    control_machine_ssh_key: "/root/.ssh/id_rsa"  # Path to the SSH key on control machine

  tasks:
    - name: Install Git on slave servers
      apt:
        name: git
        state: present
        update_cache: yes

    - name: Ensure .ssh directory exists
      file:
        path: "/root/.ssh"
        state: directory
        mode: '0700'
        owner: root
        group: root

    - name: Copy SSH private key to slave servers
      copy:
        src: "{{ control_machine_ssh_key }}"
        dest: "{{ ssh_private_key_path }}"
        owner: root
        group: root
        mode: '0600'

    - name: Ensure SSH key has correct permissions
      file:
        path: "{{ ssh_private_key_path }}"
        mode: '0600'
        owner: root
        group: root

    - name: Add GitHub to known hosts (avoiding prompt during first connect)
      shell: ssh-keyscan -H github.com >> /root/.ssh/known_hosts
      args:
        creates: /root/.ssh/known_hosts

    - name: Clone Celery project repository
      git:
        repo: "{{ github_celery_url }}"
        dest: "{{ celery_directory }}"
        version: master  # or the branch you want to clone
        key_file: "{{ ssh_private_key_path }}"
        update: yes

    - name: Delete dnsproject irectory
      ansible.builtin.file:
        state: absent
        path: /root/dnsproject/

    - name: Clone the dnsproject repository
      git:
        repo: "{{ github_dnsproject_url }}"
        dest: "{{ dnsproject_directory }}"
        version: main  # or the branch you want to clone
        key_file: "{{ ssh_private_key_path }}"
        update: yes
