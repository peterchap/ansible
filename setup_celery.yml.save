--
- name: Install and Start Celery on Slave Servers
  hosts: slaves
  become: true
  vars:
    celery_user: "root"            # User to run Celery
    celery_group: "celerygroup"          # Group for the Celery user
    app_directory: "/srv/celery_app"     # Directory for your Celery app
    celery_app: "your_app"               # Name of the Celery app (update with your app name)
    broker_url: "redis://localhost:6379" # Update to your actual broker (e.g., Redis or RabbitMQ)
    result_backend: "redis://localhost:6379/0"  # Result backend (optional)

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Create Celery user
      user:
        name: "{{ celery_user }}"
        group: "{{ celery_group }}"
        create_home: yes
        home: /home/{{ celery_user }}

    - name: Create application directory
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ celery_user }}"
        group: "{{ celery_group }}"
        mode: '0755'

    - name: Set up virtual environment for Celery
      become_user: "{{ celery_user }}"
      command: python3 -m venv {{ app_directory }}/venv

    - name: Install required Python packages for Celery
      become_user: "{{ celery_user }}"
      pip:
        requirements: "{{ app_directory }}/requirements.txt"
        virtualenv: "{{ app_directory }}/venv"
      args:
        chdir: "{{ app_directory }}"

    - name: Create systemd service file for Celery
      template:
        src: celery.service.j2
        dest: /etc/systemd/system/celery.service
      notify: Restart Celery

  handlers:
    - name: Restart Celery
      systemd:
        name: celery
        state: restarted
        enabled: yes

---
