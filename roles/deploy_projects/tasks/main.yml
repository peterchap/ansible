#SPDX-License-Identifier: MIT-0
---
- name: Clone/Update Ansible repository
  ansible.builtin.git:
    repo: "https://x-access-token:{{ github_access_token }}@github.com/peterchap/ansible.git"
    dest: "{{ ansible_directory }}"
    version: master
    update: yes

- name: Clone/Update Celery project repository
  ansible.builtin.git:
    repo: "https://x-access-token:{{ github_access_token }}@github.com/peterchap/celery_master.git"
    dest: "{{ celery_directory }}"
    version: master
    update: yes

- name: Clone/Update the dnsproject repository
  ansible.builtin.git:
    repo: "https://x-access-token:{{ github_access_token }}@github.com/peterchap/dnsproject.git"
    dest: "{{ dnsproject_directory }}"
    version: main
    update: yes

- name: Install system package for creating virtual environments
  ansible.builtin.apt:
    name: python3.12-venv # Make sure this matches the python version you intend to use
    state: present
    update_cache: yes

- name: Create virtual environment and install/update pip for Celery
  ansible.builtin.pip:
    name: pip
    state: latest
    virtualenv: "{{ celery_directory }}/celerymaster"
    virtualenv_command: "/usr/bin/python3.12 -m venv"

- name: Install Celery project requirements into its virtualenv
  ansible.builtin.pip:
    requirements: "{{ celery_directory }}/requirements.txt"
    virtualenv: "{{ celery_directory }}/celerymaster"

- name: Create virtual environment and install/update pip for DNS Project
  ansible.builtin.pip:
    name: pip
    state: latest
    virtualenv: "{{ dnsproject_directory }}/dnsproject"
    virtualenv_command: "/usr/bin/python3.12 -m venv"
    
- name: Install dnsproject requirements into its virtualenv
  ansible.builtin.pip:
    requirements: "{{ dnsproject_directory }}/requirements.txt"
    virtualenv: "{{ dnsproject_directory }}/dnsproject"
