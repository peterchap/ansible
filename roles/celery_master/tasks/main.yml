# SPDX-License-Identifier: MIT-0
---
# tasks file for roles/celery_master
- name: 1. Install System Dependencies
  apt:
    name: [rabbitmq-server, python3-pip, python3-venv, git]
    state: present
    update_cache: yes
  tags: [install]

- name: 2. Start and Enable RabbitMQ
  systemd:
    name: rabbitmq-server
    state: started
    enabled: yes
  tags: [configure]

- name: 3. Create Application and Log Directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
  loop: ["{{ app_dir }}", "{{ venv_dir }}", "{{ log_dir }}"]
  tags: [configure]

- name: 4. Clone or Update Application from Git
  git:
    repo: "{{ git_repo }}"
    dest: "{{ app_dir }}"
    version: "{{ git_branch }}"
    accept_hostkey: yes
  notify: Restart Celery Beat
  tags: [deploy]

- name: 5. Install Python Dependencies from requirements.txt
  pip:
    requirements: "{{ app_dir }}/requirements.txt"
    virtualenv: "{{ venv_dir }}"
    state: present
  notify: Restart Celery Beat
  tags: [deploy]

- name: 6. Create Celery Beat Systemd Service
  template:
    src: celery_beat.service.j2
    dest: /etc/systemd/system/celery_beat.service
    mode: '0644'
  tags: [configure]

- name: 7. Reload Systemd and Ensure Celery Beat is Running
  systemd:
    name: celery_beat
    daemon_reload: yes
    enabled: yes
    state: started
  tags: [configure]

- name: 8. Copy Schedule Management Script
  copy:
    src: add_schedule.py
    dest: "{{ app_dir }}/add_schedule.py"
    mode: '0755'
  tags: [add_schedule]

- name: 9. (Optional) Run Script to Add Task to Redis Schedule
  command: >
    {{ venv_dir }}/bin/python {{ app_dir }}/add_schedule.py
  args:
    chdir: "{{ app_dir }}"
  register: schedule_result
  changed_when: "'Task added successfully' in schedule_result.stdout"
  tags: [add_schedule]

